METEOR JS DEVELOPMENT

CREATE a collection of images

image_share.js

Images = new Mongo.Collection("images");
console.log(Images.find().count());

if (Meteor.isClient) {
    var image_data = [
    {
        img_src: "laptops.jpg",
        img_alt: "some laptops on the table"
    },
    {
        img_src: "bass.jpg",
        img_alt: "base player"
    },
    {
        img_src: "beard.jpg",
        img_alt: "some musicians with beards"
    },
    ];

Template.images.helpers({images:image_data});

Template.images.events({
    'click .js-image': function(event) {
        $(event.target).css('width', '50px' );
    }
});

}

if (Meteor.isServer) {
}


Create new file startup.js

highslater@mint64 ~/Programming/Coursera/Working On/Meteor.js Development/Meteor-REDUX/image_share $ touch startup.js
highslater@mint64 ~/Programming/Coursera/Working On/Meteor.js Development/Meteor-REDUX/image_share $ ls -hal1
total 28K
drwxr-xr-x 4 highslater highslater 4.0K Jan 26 14:54 .
drwxr-xr-x 4 highslater highslater 4.0K Jan 26 14:19 ..
-rw-r--r-- 1 highslater highslater   31 Jan 25 12:39 image_share.css
-rw-r--r-- 1 highslater highslater  663 Jan 26 14:06 image_share.html
-rw-r--r-- 1 highslater highslater  585 Jan 26 14:51 image_share.js
drwxr-xr-x 3 highslater highslater 4.0K Jan 26 13:17 .meteor
drwxr-xr-x 2 highslater highslater 4.0K Jan 11 18:16 public
-rw-r--r-- 1 highslater highslater    0 Jan 26 14:54 startup.js


CREATE starter data

if (Meteor.isServer) {
    Meteor.startup(function() {
        if (Images.find().count() == 0) {

            Images.insert(
                {
                    img_src: "laptops.jpg",
                    img_alt: "some laptops on the table"
                }
            ); // end of Images.insert
            
            Images.insert(
                {
                    img_src: "image_1.jpg",
                    img_alt: "some laptops on the table"
                }
            ); // end of Images.insert

            Images.insert(
                {
                    img_src: "image_2.jpg",
                    img_alt: "some laptops on the table"
                }
            ); // end of Images.insert

        } // end of if have no images
    });  // end of function
} // end of Meteor.isServer


//     this is image_share.html


<head>
  <title>image_share</title>
</head>

<body>
  <h1>Welcome to Coursera!</h1>

  <div class="container">
  {{> images}}
  </div>
</body>

<template name="images">
<div class="row">
        {{#each images}}
        <div class="col-xs-12 col-md-3" id="{{_id}}">
            <div class="thumbnail">
            <img class="js-image" src="{{img_src}}" alt="{{img_alt}}"/>
                <div class="caption">
                    <h3>Thumbnail Label</h3>
                    <p>Descriptionn of image</p>
                    <button class="btn btn-warning js-del-image">delete</button>
                </div><!--  / caption  -->
            </div><!--  / thumbnail  -->
        </div><!--  / column  -->
        {{/each}}
</div><!--  / row  -->
</template>

//     this is image_share.js


Images = new Mongo.Collection("images");

if (Meteor.isClient) {
Template.images.helpers({images:Images.find()});

Template.images.events({
    'click .js-image': function(event) {
        $(event.target).css('width', '50px' );
    },// end of 'click .js-image': function(event)
    'click .js-del-image': function(event) {
        var image_id = this._id;
        console.log(image_id);
        $("#" + image_id).hide('slow', function() {
             Images.remove({"_id": image_id});
        }) 
    },// end of 'click .js-del-image': function(event)
});// end of Template.images.events
}// end of if (Meteor.isClient)


//     this is startup.js


if (Meteor.isServer) {
    Meteor.startup(function() {
        if (Images.find().count() == 0) {
            for (var i = 1; i < 23; i++) {
                Images.insert(
                    {
                        img_src: "img_" + i + ".jpg",
                        img_alt: "image number " + i
                    }
                ); // end of Images.insert
            }// end of for insert images loop
            // count the images
            console.log("startup.js says " + Images.find().count());
        } // end of if have no images
    });  // end of function
} // end of Meteor.isServer


/* CSS declarations go here */

.thumbnail {
    max-height: 500px;
    min-height: 500px;
}

ADD the ability to rate images

highslater@mint64 ~/Programming/Coursera/Working On/Meteor.js Development/Meteor-REDUX/image_share $ meteor add barbatus:stars-rating
                                                                                   
Changes to your project's package version selections:
                                              
barbatus:stars-rating  added, version 1.0.7   
less                   added, version 2.5.1

                                              
barbatus:stars-rating: Stars rating control   


<!-- this is image_share.html -->

<head>
  <title>image_share</title>
</head>

<body>
  <h1>Welcome to Coursera!</h1>

  <div class="container">
  {{> images}}
  </div>
</body>
<template name="images">
<div class="row">
        {{#each images}}
        <div class="col-xs-12 col-md-3" id="{{_id}}">
            <div class="thumbnail">
            <img class="js-image" src="{{img_src}}" alt="{{img_alt}}"/>
                <div class="caption">
                    <h3>Rating: {{rating}}</h3>
                    <p>Description of image</p>
                    <p>{{>starsRating mutable = true class="js-rate-image" mongo_id= _id}}</p>
                    <button class="btn btn-warning js-del-image">delete</button>
                </div><!--  / caption  -->
            </div><!--  / thumbnail  -->
        </div><!--  / column  -->
        {{/each}}
</div><!--  / row  -->
</template>

//     this is image_share.js

Images = new Mongo.Collection("images");

if (Meteor.isClient) {
Template.images.helpers({images:Images.find({}, {sort: {rating: -1}})
});

Template.images.events({

    'click .js-image': function(event) {
        $(event.target).css('width', '50px' );
    },   // end of 'click .js-image'

    'click .js-del-image': function(event) {
        var image_id = this._id;
        $("#" + image_id).hide('slow', function() {
             Images.remove({"_id": image_id});
        }) 
    },   // end of 'click .js-del-image'

     'click .js-rate-image': function(event) {
        var rating = $(event.currentTarget).data("userrating");
        console.log(rating);
        var image_id = this.mongo_id;
        console.log(image_id);
        Images.update({ _id: image_id}, {$set: {rating: rating}});
    },   // end of 'click .js-rate-image'

});   // end of Template.images.events
}   // end of if (Meteor.isClient)


//     this is startup.js

if (Meteor.isServer) {
    Meteor.startup(function() {
        if (Images.find().count() == 0) {
            for (var i = 1; i < 23; i++) {
                Images.insert(
                    {
                        img_src: "img_" + i + ".jpg",
                        img_alt: "image number " + i
                    }
                ); // end of Images.insert
            }// end of for insert images loop
            // count the images
            console.log("startup.js says " + Images.find().count());
        } // end of if have no images
    });  // end of function
} // end of Meteor.isServer


/* CSS declarations go here */

.thumbnail {
    max-height: 500px;
    min-height: 500px;
}

ADD a bootstrap modal for adding images

<!-- this is image_share.html -->

<head>
    <title>image_share</title>
</head>

<body>
{{>image_add_form}}


    <h1>Welcome to Coursera!</h1>

    <div class="container">
        {{> images}}
    </div>
</body>



<template name="image_add_form">
<div class="modal fade" id="image_add_form">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title"></div><!-- /  modal-title  -->
            </div><!-- /  modal-header  -->
            <div class="modal-body">
                <form class="js-add-image">
                    <input type="text" name="img_src">
                    <br>
                    <input type="text" name="img_alt">
                    <button class="btn btn-success ">save</button>
                </form><!-- /  js-add-image  -->
            </div><!-- /  modal-body  -->
            <div class="modal-footer">
                <button class="btn btn-warning" data-dismiss="modal">cancel</button>
            </div><!-- /  modal-footer  -->
        </div><!-- /  modal-content  -->
    </div><!-- /  modal-dialog  -->
</div><!-- /  modal fade  -->    
</template><!--  / template image_add_form  -->


<template name="images">
<button class="btn btn-success js-show-image-form">Add image</button>
<div class="row">
        {{#each images}}
        <div class="col-xs-12 col-md-3" id="{{_id}}">
            <div class="thumbnail">
            <img class="js-image" src="{{img_src}}" alt="{{img_alt}}"/>
                <div class="caption">
                    <h3>Rating: {{rating}}</h3>
                    <p>{{img_alt}}</p>
                    <p>{{>starsRating mutable = true class="js-rate-image" mongo_id= _id}}</p>
                    <button class="btn btn-warning js-del-image">delete</button>
                </div><!--  / caption  -->
            </div><!--  / thumbnail  -->
        </div><!--  / column  -->
        {{/each}}   <!-- / #each images -->
</div><!--  / row  -->
</template><!--  /  template images  -->


//     this is image_share.js

Images = new Mongo.Collection("images");

if (Meteor.isClient) {
Template.images.helpers({images:Images.find({}, {sort: {createdOn: -1, rating: -1}})
});

Template.images.events({

    'click .js-image': function(event) {
        $(event.target).css('width', '50px' );
    },   // end of 'click .js-image'

    'click .js-del-image': function(event) {
        var image_id = this._id;
        $("#" + image_id).hide('slow', function() {
             Images.remove({"_id": image_id});
        }) 
    },   // end of 'click .js-del-image'

     'click .js-rate-image': function(event) {
        var rating = $(event.currentTarget).data("userrating");
        console.log(rating);
        var image_id = this.mongo_id;
        console.log(image_id);
        Images.update({ _id: image_id}, {$set: {rating: rating}});
    },   // end of 'click .js-rate-image'

    'click .js-show-image-form': function(event){
        $("#image_add_form").modal('show');
    },   // end of 'click .js-show-image-form'

});   // end of Template.images.events

Template.image_add_form.events({

    'submit .js-add-image': function(event) {
        var img_src, img_alt;
        img_src = event.target.img_src.value;
        img_alt = event.target.img_alt.value;
        console.log("src: " + img_src + " alt: " + img_alt);
        Images.insert({
            img_src: img_src,
            img_alt: img_alt,
            createdOn: new Date(),
        });
        $("#image_add_form").modal('hide');
        return false;
    }   // end of 'submit .js-add-image'

});   // end of Template.image_add_form.events

}   // end of if (Meteor.isClient)


//     this is startup.js

if (Meteor.isServer) {
    Meteor.startup(function() {
        if (Images.find().count() == 0) {
            for (var i = 1; i < 23; i++) {
                Images.insert(
                    {
                        img_src: "img_" + i + ".jpg",
                        img_alt: "image number " + i
                    }
                ); // end of Images.insert
            }// end of for insert images loop
            // count the images
            console.log("startup.js says " + Images.find().count());
        } // end of if have no images
    });  // end of function
} // end of Meteor.isServer

/* CSS declarations go here */

.thumbnail {
    max-height: 500px;
    min-height: 500px;
}